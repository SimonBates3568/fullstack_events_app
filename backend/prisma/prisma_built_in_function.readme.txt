## ðŸ“‹ Prisma Client Built-in Functions (for each model)

> Replace `user` with your model name (e.g., `post`, `product`, `order`, etc.)

### ðŸŸ¢ **Create**

* `create()` â€“ Create a single record
* `createMany()` â€“ Create multiple records at once

---

### ðŸ”µ **Read**

* `findUnique()` â€“ Find one record by a unique field (e.g., `id`, `email`)
* `findFirst()` â€“ Find the first record that matches a filter
* `findMany()` â€“ Find all records that match a filter (or all if no filter)
* `count()` â€“ Count records
* `aggregate()` â€“ Get things like `avg`, `sum`, `min`, `max`
* `groupBy()` â€“ Group records and perform calculations on each group

---

### ðŸŸ¡ **Update**

* `update()` â€“ Update a single record by unique field
* `updateMany()` â€“ Update multiple records that match a filter
* `upsert()` â€“ Update if exists, otherwise create (like merge)

---

### ðŸ”´ **Delete**

* `delete()` â€“ Delete one record by unique field
* `deleteMany()` â€“ Delete multiple records that match a filter

---

## ðŸ§  Example with `user` model

```js
// Create a user
await prisma.user.create({ data: { name: 'Alice', email: 'a@a.com' } });

// Get all users
await prisma.user.findMany();

// Update a user
await prisma.user.update({
  where: { id: 1 },
  data: { name: 'New Name' },
});

// Delete a user
await prisma.user.delete({ where: { id: 1 } });
```

---

## âœ… Summary Table

| Category | Function Name                                                          |
| -------- | ---------------------------------------------------------------------- |
| Create   | `create`, `createMany`                                                 |
| Read     | `findUnique`, `findFirst`, `findMany`, `count`, `aggregate`, `groupBy` |
| Update   | `update`, `updateMany`, `upsert`                                       |
| Delete   | `delete`, `deleteMany`                                                 |

